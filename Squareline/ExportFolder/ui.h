// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.3.4
// LVGL version: 8.3.6
// Project name: PHReaderWifiV1

#ifndef _PHREADERWIFIV1_UI_H
#define _PHREADERWIFIV1_UI_H

#ifdef __cplusplus
extern "C" {
#endif

#include "lvgl.h"

#include "ui_helpers.h"
#include "ui_events.h"
void StartAnimation_Animation(lv_obj_t * TargetObject, int delay);
// SCREEN: ui_EntranceScreen
void ui_EntranceScreen_screen_init(void);
extern lv_obj_t * ui_EntranceScreen;
void ui_event_btnCount(lv_event_t * e);
extern lv_obj_t * ui_btnCount;
extern lv_obj_t * ui_lblButton;
void ui_event_configWifi(lv_event_t * e);
extern lv_obj_t * ui_configWifi;
extern lv_obj_t * ui_lblButton2;
void ui_event_calibrateProbePageButton(lv_event_t * e);
extern lv_obj_t * ui_calibrateProbePageButton;
extern lv_obj_t * ui_calibrateProbeButtonLabel;
// SCREEN: ui_CalibratePhScreen
void ui_CalibratePhScreen_screen_init(void);
extern lv_obj_t * ui_CalibratePhScreen;
void ui_event_highPointCalButton(lv_event_t * e);
extern lv_obj_t * ui_highPointCalButton;
extern lv_obj_t * ui_highPointCalLabel;
void ui_event_lowPointCalButton(lv_event_t * e);
extern lv_obj_t * ui_lowPointCalButton;
extern lv_obj_t * ui_lowPointCalLabel;
void ui_event_midPointCalButton(lv_event_t * e);
extern lv_obj_t * ui_midPointCalButton;
extern lv_obj_t * ui_midPointCalLabel;
void ui_event_beginCalButton(lv_event_t * e);
extern lv_obj_t * ui_beginCalButton;
extern lv_obj_t * ui_beginCalLabel;
extern lv_obj_t * ui_calibrationLabel;
// SCREEN: ui_configWifiScreen
void ui_configWifiScreen_screen_init(void);
extern lv_obj_t * ui_configWifiScreen;
extern lv_obj_t * ui_ssidLabelName;
void ui_event_passwordTextArea(lv_event_t * e);
extern lv_obj_t * ui_passwordTextArea;
extern lv_obj_t * ui_passLabelName;
void ui_event_Keyboard(lv_event_t * e);
extern lv_obj_t * ui_Keyboard;
void ui_event_setWifiInfoButton(lv_event_t * e);
extern lv_obj_t * ui_setWifiInfoButton;
void ui_event_wifiTestButtonLabel(lv_event_t * e);
extern lv_obj_t * ui_wifiTestButtonLabel;
extern lv_obj_t * ui_wifiChooserDropdown;
void ui_event_RefreshScan(lv_event_t * e);
extern lv_obj_t * ui_RefreshScan;
extern lv_obj_t * ui_Label2;
// SCREEN: ui_PHReaderMainScreen
void ui_PHReaderMainScreen_screen_init(void);
extern lv_obj_t * ui_PHReaderMainScreen;
extern lv_obj_t * ui_mainTabView;
extern lv_obj_t * ui_pHReader;
extern lv_obj_t * ui_celciusSwitchLabel;
extern lv_obj_t * ui_fahrenheitSwitchLabel;
void ui_event_tempUnitsSwitch(lv_event_t * e);
extern lv_obj_t * ui_tempUnitsSwitch;
extern lv_obj_t * ui_Panel1;
extern lv_obj_t * ui_tempStaticLabel;
extern lv_obj_t * ui_pHValLabel;
extern lv_obj_t * ui_PHStaticLabel;
extern lv_obj_t * ui_tempValLabel;
void ui_event_ReturnToHomeButton(lv_event_t * e);
extern lv_obj_t * ui_ReturnToHomeButton;
extern lv_obj_t * ui_Label5;
void ui_event_TurnOffScreenButton(lv_event_t * e);
extern lv_obj_t * ui_TurnOffScreenButton;
extern lv_obj_t * ui_Label4;
extern lv_obj_t * ui_chartTabPage;
extern lv_obj_t * ui_chartTabView;
extern lv_obj_t * ui_pHChartTabPage;
extern lv_obj_t * ui_pHChart;
extern lv_obj_t * ui_tempChartTabPage;
extern lv_obj_t * ui_tempChart;
extern lv_obj_t * ui_settingsTabPage;
void ui_event_startWebpageButton(lv_event_t * e);
extern lv_obj_t * ui_startWebpageButton;
extern lv_obj_t * ui_startWiFiButtonLabel;
void ui_event_plotTimePeriodDropdown(lv_event_t * e);
extern lv_obj_t * ui_plotTimePeriodDropdown;
extern lv_obj_t * ui_plotTimePeriodLabel;
void ui_event_samplingIntervalDropdown(lv_event_t * e);
extern lv_obj_t * ui_samplingIntervalDropdown;
extern lv_obj_t * ui_samplingIntervalLabel;
extern lv_obj_t * ui_warningLabel;
void ui_event_startBluetoothButton(lv_event_t * e);
extern lv_obj_t * ui_startBluetoothButton;
extern lv_obj_t * ui_startBluetoothButtonLabel;
extern lv_obj_t * ui_Label7;
extern lv_obj_t * ui_Label9;
// SCREEN: ui_APorSTAScreen
void ui_APorSTAScreen_screen_init(void);
extern lv_obj_t * ui_APorSTAScreen;
void ui_event_apMode(lv_event_t * e);
extern lv_obj_t * ui_apMode;
extern lv_obj_t * ui_Label1;
void ui_event_staMode(lv_event_t * e);
extern lv_obj_t * ui_staMode;
extern lv_obj_t * ui_Label3;
// SCREEN: ui_wifiTestScreen
void ui_wifiTestScreen_screen_init(void);
extern lv_obj_t * ui_wifiTestScreen;
extern lv_obj_t * ui_wifiTestLabel;
// SCREEN: ui_WifiApMode
void ui_WifiApMode_screen_init(void);
extern lv_obj_t * ui_WifiApMode;
extern lv_obj_t * ui_ipLabelApMode;
void ui_event_closeWifiServerButtonApMode(lv_event_t * e);
extern lv_obj_t * ui_closeWifiServerButtonApMode;
extern lv_obj_t * ui_closeWifiServerLabelApMode;
void ui_event_TurnOffScreenButton1(lv_event_t * e);
extern lv_obj_t * ui_TurnOffScreenButton1;
extern lv_obj_t * ui_Label6;
// SCREEN: ui_WifiStaMode
void ui_WifiStaMode_screen_init(void);
extern lv_obj_t * ui_WifiStaMode;
extern lv_obj_t * ui_ipLabelStaMode;
void ui_event_closeWifiServerButtonApStaMode(lv_event_t * e);
extern lv_obj_t * ui_closeWifiServerButtonApStaMode;
extern lv_obj_t * ui_closeWifiServerLabelStaMode;
void ui_event_TurnOffScreenButton3(lv_event_t * e);
extern lv_obj_t * ui_TurnOffScreenButton3;
extern lv_obj_t * ui_Label8;
// SCREEN: ui_bluetoothMode
void ui_bluetoothMode_screen_init(void);
extern lv_obj_t * ui_bluetoothMode;
void ui_event_returnFromBluetoothModeButton(lv_event_t * e);
extern lv_obj_t * ui_returnFromBluetoothModeButton;
extern lv_obj_t * ui_xlabelBluetoothPage;
extern lv_obj_t * ui_bluetoothPromptMessage;
// SCREEN: ui_SleepScreen
void ui_SleepScreen_screen_init(void);
extern lv_obj_t * ui_SleepScreen;
extern lv_obj_t * ui_Button2;
extern lv_obj_t * ui____initial_actions0;




void ui_init(void);

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
